!function(){"use strict";function e(e,o=100){let t=0;!function n(){"undefined"!=typeof $&&"undefined"!=typeof jQuery?e():t<o?(t++,setTimeout(n,50)):(console.warn("ProElements: jQuery not found in editor after maximum retries, proceeding anyway"),e())}()}function o(e){"undefined"!=typeof elementor&&elementor.isReady?e():"undefined"!=typeof elementor?elementor.on("preview:loaded",e):setTimeout(()=>o(e),100)}function t(){if("undefined"!=typeof elementor){if(elementor.config&&!elementor.config.settings&&(elementor.config.settings={}),elementor.settings&&!elementor.settings.page&&(elementor.settings.page=new Backbone.Model({})),elementor.modules&&elementor.modules.layouts&&elementor.modules.layouts.panel){const e=elementor.modules.layouts.panel.attachPreview;e&&(elementor.modules.layouts.panel.attachPreview=function(o,t){try{let n=document.querySelector(t);return n||(console.warn(`ProElements: Cannot attach preview to document '${o}', element '${t}' was not found. Creating it...`),n=document.createElement("div"),n.className=`elementor elementor-${o}`,n.dataset.elementorType="wp-page",n.dataset.elementorId=o,document.body.appendChild(n)),e.call(this,o,t)}catch(e){return console.error("ProElements: Error in attachPreview:",e),!1}})}if("undefined"!=typeof elementorPreview&&elementorPreview.preview){const e=elementorPreview.preview.attach;e&&(elementorPreview.preview.attach=function(o,t){try{let n=document.querySelector(t);return n||(console.warn(`ProElements: Preview attach - element '${t}' not found for document '${o}'. Creating container...`),n=document.createElement("div"),n.className=`elementor elementor-${o}`,n.dataset.elementorType="wp-page",n.dataset.elementorId=o,document.body.appendChild(n)),e.call(this,o,t)}catch(e){return console.error("ProElements: Error in preview attach:",e),Promise.reject(e)}})}}else setTimeout(t,100)}function n(){"undefined"==typeof __webpack_require__&&(window.__webpack_require__=function(e){return console.warn("ProElements: webpack_require called but not available:",e),{}}),void 0===__webpack_require__.e&&(__webpack_require__.e=function(e){return console.warn("ProElements: webpack chunk loading not available:",e),Promise.resolve()}),function(){if(void 0===window.importMeta&&(window.importMeta={url:window.location.href,env:{MODE:"localhost"===window.location.hostname?"development":"production",DEV:"localhost"===window.location.hostname,PROD:"localhost"!==window.location.hostname,BASE_URL:window.location.origin+"/",SSR:!1},resolve:function(e){try{return new URL(e,window.location.href).href}catch(o){return e}}}),"undefined"!=typeof globalThis)try{Object.defineProperty(globalThis,"import",{value:{meta:window.importMeta},writable:!1,configurable:!0})}catch(e){globalThis.import&&!globalThis.import.meta&&(globalThis.import.meta=window.importMeta)}const e=window.import;window.import=function(o){try{return e&&"function"==typeof e?e(o):(console.warn("ProElements: Dynamic import not supported, attempting fallback for:",o),new Promise((e,t)=>{const n=document.createElement("script");n.src=o,n.onload=()=>e({}),n.onerror=()=>t(new Error(`Failed to load module: ${o}`)),document.head.appendChild(n)}))}catch(e){return console.warn("ProElements: Import error:",e),Promise.reject(e)}}}(),function(){const e=window.postMessage;window.postMessage=function(o,t,n){try{if(o&&"object"==typeof o){const r=JSON.parse(JSON.stringify(o,(e,o)=>o instanceof URL?o.href:o instanceof File?"[File object]":o instanceof Blob?"[Blob object]":"function"==typeof o?"[Function]":o));return e.call(this,r,t,n)}return e.call(this,o,t,n)}catch(e){console.warn("ProElements: Fixed editor communication error:",e)}}}(),o(()=>{t(),function(){if("undefined"==typeof elementor)return;document.querySelectorAll('[data-elementor-type="loop-item"]').forEach(e=>{e.dataset.elementorId||(e.dataset.elementorId=Math.random().toString(36).substr(2,9))})}(),console.log("ProElements: Editor compatibility fixes applied")})}e(function(){"loading"===document.readyState?document.addEventListener("DOMContentLoaded",n):n()}),"undefined"!=typeof elementorCommon&&elementorCommon.elements&&elementorCommon.elements.$window?elementorCommon.elements.$window.on("elementor:init",function(){e(n)}):setTimeout(function(){"undefined"!=typeof elementorCommon&&elementorCommon.elements&&elementorCommon.elements.$window&&elementorCommon.elements.$window.on("elementor:init",function(){e(n)})},1e3)}();